//https://practice.geeksforgeeks.org/problems/number-of-provinces/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=number_of_provinces  
 private:
    void bfs(int i,vector<int> a[],int V,int vis[])
    {
        queue<int> q;
        q.push(i);
        vis[i]=1;
        while(!q.empty())
        {
            int f=q.front();
            q.pop();
            for(auto in:a[f])
            {
                if(!vis[in])
                {
                    q.push(in);
                    vis[in]=1;
                }
            }
        }
    }
  public:
    int numProvinces(vector<vector<int>> adj, int V) {
        // code here
        vector<int> a[V];
        for(int i=0;i<V;i++)
        {
            for(int j=0;j<V;j++)
            {
                if(adj[i][j] && i!=j)
                 {
                     a[i].push_back(j);
                     a[j].push_back(i);
                 }
            }
        }
        
        int vis[V]={0};
        int count=0;
        for(int i=0;i<V;i++)
        {
            if(!vis[i])
            {
                count++;
                bfs(i,a,V,vis);
            }
        }
         return count;
    }