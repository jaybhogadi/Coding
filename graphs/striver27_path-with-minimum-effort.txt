 
https://practice.geeksforgeeks.org/problems/path-with-minimum-effort/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=path-with-minimum-effort

int MinimumEffort(vector<vector<int>>& heights) {
        // Code here
        priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,
        greater<pair<int,pair<int,int>>>> pq;
        int n=heights.size();
        int m=heights[0].size();
        vector<vector<int>> dist(n,vector<int>(m,1e9));
        dist[0][0]=0;
        pq.push({0,{0,0}});
        int dr[]={-1,0,+1,0};
        int dc[]={0,+1,0,-1};
        while(!pq.empty())
        {
            auto it=pq.top();
            int dist1=it.first;
            int xc=it.second.first;
            int yc=it.second.second;
            pq.pop();
            if(xc==n-1 && yc==m-1) return dist1;
            
            for(int i=0;i<4;i++)
            {
                int xx=xc+dr[i];
                int yy=yc+dc[i];
                
                if(xx>=0 && xx<n && yy>=0 && yy<m)
                {
                    int neweffort=max(abs(heights[xc][yc]-heights[xx][yy]),dist1);
                    if(neweffort<dist[xx][yy])
                    {
                        dist[xx][yy]=neweffort;
                        pq.push({neweffort,{xx,yy}});
                    }
                }
            }
        }
        return 0;