https://practice.geeksforgeeks.org/problems/cheapest-flights-within-k-stops/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=cheapest-flights-within-k-stops

int CheapestFLight(int n, vector<vector<int>>& flights, int src, int dst, int K)  {
        // Code here
        vector<pair<int,int>> adj[n];
        for(auto it:flights)
        {
            adj[it[0]].push_back({it[1],it[2]});
        }
        queue<pair<int,pair<int,int>>> q;
        vector<int> dist(n,1e9);
        q.push({0,{src,0}});
        dist[src]=0;
        while(!q.empty())
        {
            auto it=q.front();
            int stops=it.first;
            int node=it.second.first;
            int cost=it.second.second;
            
            q.pop();
            
            if(stops>K)
              continue;
              
              for(auto it:adj[node])
              {
                  
                  int node2=it.first;
                  
                  int cost2=it.second;
                  if(cost2+cost<dist[node2])
                  {
                      dist[node2]=cost2+cost;
                      q.push({stops+1,{node2,cost+cost2}});
                  }
              }
        }
        if(dist[dst]==1e9) return -1;
        return dist[dst];
    }