https://practice.geeksforgeeks.org/problems/find-the-number-of-islands/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=find_the_number_of_islands 

void bfs(int i,int j,vector<vector<int>>& a,vector<vector<char>>& grid)
    {
        a[i][j]=1;
        queue<pair<int,int>> q;
        q.push({i,j});
        
        int n=grid.size();
        int m=grid[0].size();
        while(!q.empty())
        {
            i=q.front().first;
            j=q.front().second;
            q.pop();
        
        for(int r=-1;r<=1;r++)
        {
            for(int c=-1;c<=1;c++)
            {
                int r1=r+i;
                int c1=c+j;
                if((r1>=0 && r1<n) && (c1>=0 && c1<m) && grid[r1][c1]=='1' && a[r1][c1]!=1  )
                {
                    a[r1][c1]=1;
                    q.push({r1,c1});
                    
                }
                
            }
        }
        }
    }
  public:
    // Function to find the number of islands.
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>> a(n,vector<int>(m,0));
        int c=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(!a[i][j] && grid[i][j]=='1')
                {
                    c++;
                    bfs(i,j,a,grid);
                }
            }
        }
        return c;
    }