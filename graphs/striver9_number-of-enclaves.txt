https://practice.geeksforgeeks.org/problems/number-of-enclaves/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=number-of-enclaves 

int numberOfEnclaves(vector<vector<int>> &grid) {
        // Code here
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>> vis(n,vector<int>(m,0));
        queue<pair<int,int>> q;
        for(int i=0;i<m;i++)
        {
            if(grid[0][i]==1)
              q.push({0,i});
              if(grid[n-1][i]==1)
               q.push({n-1,i});
        }
        for(int i=0;i<n;i++)
        {
            if(grid[i][0]==1)
             q.push({i,0});
             if(grid[i][m-1]==1)
              q.push({i,m-1});
        }
        while(!q.empty())
        {
            
            int a=q.front().first;
            int b=q.front().second;
            q.pop();
            if(vis[a][b]!=1){
            vis[a][b]=1;
            int nr[]={-1,0,+1,0};
            int nc[]={0,+1,0,-1};
            for(int k=0;k<4;k++)
            {
                int row=a+nr[k];
                int col=b+nc[k];
                if(row>=0 && row<n && col>=0 && col<m && vis[row][col]!=1 && grid[row][col]==1)
                {
                    q.push({row,col});
                    
                }
            }
        }
        }
        int cnt=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(vis[i][j]==0 && grid[i][j]==1)
                 cnt++;
            }
        }
        return cnt;
    }