
//Given a sorted and rotated array, find if there is a pair with a given sum

#include <iostream>
using namespace std;
int
pivotfind (int a[], int low, int high)
{
  if (high < low)
    return -1;
  if (high == low)
    return low;
  int mid = (low + high) / 2;
  if (mid > low && a[mid] < a[mid - 1])
    return mid - 1;
  if (mid < high && a[mid] > a[mid + 1])
    return mid;
  if (a[low] >= a[mid])
    return pivotfind (a, low, mid - 1);
  return pivotfind (a, mid + 1, high);
}

int
main ()
{
  int n;
  cin >> n;
  int a[n];
  for (int i = 0; i < n; i++)
    cin >> a[i];
  int pivot = pivotfind (a, 0, n - 1);
  cout << "PIVOT" << pivot << endl;
  int ptr1 = pivot, ptr2 = pivot + 1;
  int k, flag = 0;
  cin >> k;
  while (ptr1 < ptr2 && ptr1 != ptr2 && ptr1 >= 0 && ptr2 < n)
    {
      if (a[ptr1] + a[ptr2] > k)
	ptr1--;
      else if (a[ptr1] + a[ptr2] < k)
	ptr2++;
      else
	{
	  flag = 1;
	  break;
	}
      if (ptr1 < 0)
	ptr1 = ptr2;
      if (ptr2 == n)
	ptr2 = 0;
    }
  cout << flag << endl;
}
